version: '3.8'

# Конфигурация для разработки, переопределяет основные настройки
services:
  db:
    ports:
      - "5432:5432"
  
  redis:
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password} --maxmemory 256mb --maxmemory-policy allkeys-lru
  
  backend:
    volumes:
      - ./backend:/app
    environment:
      - DEBUG=True
      - ALLOWED_HOSTS=localhost,127.0.0.1
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
      - SITE_URL=http://localhost:3000
  
  # В режиме разработки вместо собираемого frontend используем локальный dev-сервер
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app
      - /app/node_modules  # Исключаем node_modules из монтирования
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:8000/api
      - CHOKIDAR_USEPOLLING=true
    command: npm start
  
  # В режиме разработки отключаем SSL
  nginx:
    ports:
      - "8000:80"
    volumes:
      - ./nginx/conf.d/dev.conf:/etc/nginx/conf.d/default.conf
      - static_files:/var/www/static
      - media_files:/var/www/media
    
  # Отключаем certbot в режиме разработки
  certbot:
    image: hello-world
    restart: "no"
    
  # В режиме разработки делаем бэкапы реже
  backup:
    entrypoint: "/bin/sh"
    command: "-c 'echo \"0 3 * * 0 pg_dump -h db -U ${DB_USER:-postgres} ${DB_NAME:-eurolottery} > /backups/db_backup_`date +\\%Y\\%m\\%d`.sql && tar -czf /backups/media_backup_`date +\\%Y\\%m\\%d`.tar.gz -C /media_backup .\" | crontab - && crond -f'"