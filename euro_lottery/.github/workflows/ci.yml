name: Euro Lottery CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        cd backend
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --statistics
    - name: Run tests
      env:
        DEBUG: 'True'
        SECRET_KEY: 'test-secret-key'
        DATABASE_URL: 'postgres://postgres:postgres@localhost:5432/test_db'
      run: |
        cd backend
        pytest

  frontend-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
    - name: Lint
      run: |
        cd frontend
        npm run lint
    - name: Run tests
      run: |
        cd frontend
        npm test -- --watchAll=false

  build:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v2
    - name: Build backend Docker image
      run: |
        cd backend
        docker build -t euro-lottery-backend:latest .
    - name: Build frontend Docker image
      run: |
        cd frontend
        docker build -t euro-lottery-frontend:latest .